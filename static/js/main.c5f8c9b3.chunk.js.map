{"version":3,"sources":["components/App/App.module.scss","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","redux/filter/filter-actions.js","redux/filter/filter-selector.js","components/Filter/Filter.js","redux/contacts/contacts-actions.js","api/api-const.js","api/api-client.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/App/App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","Error","className","s","form","preventDefault","label","type","onChange","pattern","title","required","button","ContactList","contacts","handleDelete","contactItems","map","id","item","textContainer","onClick","list","changeFilter","createAction","getFilter","state","filter","Filter","dispatch","useDispatch","useSelector","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","API_CONST","BASE_URL","CONTACTS_ENDPOINT","getContacts","a","fetch","response","ok","statusText","json","addContact","method","body","JSON","stringify","headers","newContact","deleteContact","deletedContact","API","items","getLoading","isLoading","getInvalidated","isInvalidated","getFilteredContacts","createSelector","toLowerCase","includes","App","contactsSelectors","filteredContacts","useEffect","contactsOperations","container","find","contact","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","combineReducers","_","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,wB,ygBC4EXC,EAzEK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAOMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,MAAM,IAAIC,MAAJ,iCAAoCR,MAchD,OACE,8BACE,uBAAMS,UAAWC,IAAEC,KAAMb,SAZR,SAAAO,GACnBA,EAAMO,iBAEN,IAAMZ,EAAOK,EAAMC,OAAON,KAAKO,MACzBL,EAASG,EAAMC,OAAOJ,OAAOK,MAEnCT,EAASE,EAAME,GAzBfD,EAAQ,IACRE,EAAU,KA8BR,UACE,wBAAOM,UAAWC,IAAEG,MAApB,iBAEE,uBACEC,KAAK,OACLd,KAAK,OACLO,MAAOP,EACPe,SAAUX,EACVY,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOT,UAAWC,IAAEG,MAApB,mBAEE,uBACEC,KAAK,MACLd,KAAK,SACLO,MAAOL,EACPa,SAAUX,EACVY,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQT,UAAWC,IAAES,OAAQL,KAAK,SAAlC,+B,gBClCOM,EA5BK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACzBC,EAAeF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAChC,oBAAaO,UAAWC,IAAEgB,KAA1B,SACE,sBAAKjB,UAAWC,IAAEiB,cAAlB,UACE,iCACG3B,EADH,KACWE,KAEX,wBAAQuB,GAAIA,EAAIhB,UAAWC,IAAES,OAAQL,KAAK,SAASc,QAASN,EAA5D,wBALKG,MAYX,OAAO,oBAAIhB,UAAWC,IAAEmB,KAAjB,SAAwBN,K,wBCfpBO,EAAeC,YAAa,iBCF5BC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,QCuBzBC,EAjBA,WACb,IAAMC,EAAWC,cACXH,EAASI,YAAYN,GAO3B,OACE,wBAAOvB,UAAWC,IAAEG,MAApB,kCAEE,uBAAOC,KAAK,OAAOd,KAAK,SAASO,MAAO2B,EAAQnB,SARnC,SAAAV,GACf,IAAQE,EAAUF,EAAMC,OAAhBC,MACR6B,EAASN,EAAavB,WCVbgC,EAAqBR,YAAa,wBAClCS,EAAqBT,YAAa,wBAClCU,EAAmBV,YAAa,sBAEhCW,EAAoBX,YAAa,wBACjCY,EAAoBZ,YAAa,wBACjCa,EAAkBb,YAAa,sBAE/Bc,EAAuBd,YAAa,2BACpCe,EAAuBf,YAAa,2BACpCgB,EAAqBhB,YAAa,yB,uBCPhCiB,EALG,CAChBC,SAAU,qDACVC,kBAAmB,YCDbD,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,kBAELC,EAAW,uCAAG,8BAAAC,EAAA,+EAEAC,MAAM,GAAD,OAAIJ,EAAJ,YAAgBC,IAFrB,WAEjBI,EAFiB,QAGTC,GAHS,sBAGC,IAAI/C,MAAM8C,EAASE,YAHpB,uBAIAF,EAASG,OAJT,cAIjBpC,EAJiB,yBAKhBA,GALgB,wCAOjB,IAAIb,MAAJ,MAPiB,0DAAH,qDAWXkD,EAAU,uCAAG,WAAO1D,EAAME,GAAb,iBAAAkD,EAAA,+EAECC,MAAM,GAAD,OAAIJ,EAAJ,YAAgBC,GAAqB,CAC/DS,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE9D,OAAME,WAC7B6D,QAAS,CAAE,eAAgB,sBALP,WAEhBT,EAFgB,QAORC,GAPQ,sBAOE,IAAI/C,MAAM8C,EAASE,YAPrB,uBAQGF,EAASG,OARZ,cAQhBO,EARgB,yBASfA,GATe,wCAWhB,IAAIxD,MAAJ,MAXgB,0DAAH,wDAeVyD,EAAa,uCAAG,WAAMxC,GAAN,iBAAA2B,EAAA,+EAEFC,MAAM,GAAD,OAAIJ,EAAJ,YAAgBC,EAAhB,YAAqCzB,GAAM,CACrEkC,OAAQ,WAHe,WAEnBL,EAFmB,QAKXC,GALW,sBAKD,IAAI/C,MAAM8C,EAASE,YALlB,uBAMIF,EAASG,OANb,cAMnBS,EANmB,yBAOlBA,GAPkB,wCASnB,IAAI1D,MAAJ,MATmB,0DAAH,sDChBb2C,EAAc,yDAAM,WAAMf,GAAN,eAAAgB,EAAA,6DAC/BhB,EAASG,KADsB,kBAGN4B,IAHM,OAGvB9C,EAHuB,OAI7Be,EAASI,EAAmBnB,IAJC,gDAM7Be,EAASK,KANoB,yDAAN,uDAUdiB,EAAa,SAAC1D,EAAME,GAAP,8CAAkB,WAAMkC,GAAN,SAAAgB,EAAA,6DAC1ChB,EAASM,KADiC,kBAGlCyB,EAAenE,EAAME,GAHa,OAIxCkC,EAASO,KAJ+B,gDAMxCP,EAASQ,KAN+B,yDAAlB,uDAUbqB,EAAgB,SAAAxC,GAAE,8CAAI,WAAMW,GAAN,SAAAgB,EAAA,6DACjChB,EAASS,KADwB,kBAGzBsB,EAAkB1C,GAHO,OAI/BW,EAASU,KAJsB,gDAM/BV,EAASW,KANsB,yDAAJ,uD,QC9BlBI,EAAc,SAAAlB,GAAK,OAAIA,EAAMZ,SAAS+C,OACtCC,EAAa,SAAApC,GAAK,OAAIA,EAAMZ,SAASiD,WACrCC,EAAiB,SAAAtC,GAAK,OAAIA,EAAMZ,SAASmD,eAEzCC,EAAsBC,YAAe,CAACvB,EAAanB,IAAY,SAACX,EAAUa,GAAX,OAC1Eb,EAASa,QAAO,qBAAGlC,KAAgB2E,cAAcC,SAAS1C,EAAOyC,qBC2CpDE,GA1CH,WACV,IAAMzC,EAAWC,cACXhB,EAAWiB,YAAYwC,EAAkB3B,aACzC4B,EAAmBzC,YAAYwC,EAAkBL,qBACjDH,EAAYhC,YAAYwC,EAAkBT,YAC1CG,EAAgBlC,YAAYwC,EAAkBP,gBAEpDS,qBAAU,WACJR,GACFpC,EAAS6C,EAAmB9B,iBAE7B,CAACqB,EAAepC,IAenB,OACE,sBAAK3B,UAAWC,IAAEwE,UAAlB,UACE,2CACA,cAAC,EAAD,CAAapF,SAXQ,SAACE,EAAME,GAC1BmB,EAAS8D,MAAK,SAAAC,GAAO,OAAIA,EAAQpF,OAASA,KAC5CqF,MAAM,GAAD,OAAIrF,EAAJ,gCAGPoC,EAAS6C,EAAmBvB,WAAW1D,EAAME,OAQ3C,0CACA,cAAC,EAAD,IACCoE,EACC,2CAEA,cAAC,EAAD,CAAajD,SAAU0D,EAAkBzD,aAvBnB,SAAAjB,GAC1B,IAAQoB,EAAOpB,EAAMC,OAAbmB,GACRW,EAAS6C,EAAmBhB,cAAcxC,WCZ/B6D,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCORnB,GAAQ2B,YACZ,GADyB,gBAGtBvD,GAAqB,SAACP,EAAD,YAAU+D,YAO9B1B,GAAYyB,aAAc,GAAD,oBAC5BxD,GAAqB,kBAAM,KADC,eAE5BC,GAAqB,kBAAM,KAFC,eAG5BC,GAAmB,kBAAM,KAHG,eAI5BC,GAAoB,kBAAM,KAJE,eAK5BC,GAAoB,kBAAM,KALE,eAM5BC,GAAkB,kBAAM,KANI,eAO5BC,GAAuB,kBAAM,KAPD,eAQ5BC,GAAuB,kBAAM,KARD,eAS5BC,GAAqB,kBAAM,KATC,IAYzByB,GAAgBuB,aAAc,GAAD,oBAChCvD,GAAqB,kBAAM,KADK,eAEhCG,GAAoB,kBAAM,KAFM,eAGhCG,GAAuB,kBAAM,KAHG,IAMtBzB,GAAW4E,aAAgB,CACtC7B,SACAE,aACAE,mBC1CWtC,GAAS6D,YAAc,GAAD,gBAChCjE,GAAe,SAACoE,EAAD,YAAMF,YCAXG,GAAQC,YAAe,CAClCC,QAAS,CACPhF,YACAa,aCEJoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJM,SAASC,eAAe,SAM1BpB,M,kBCpBA3F,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,kBCA/FD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,cAAgB,mCAAmC,OAAS,+B","file":"static/js/main.c5f8c9b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2i36C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\"};","import s from './ContactForm.module.scss';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetFieldsToDefault = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error(`Unsupported text field ${name}`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n\n    onSubmit(name, number);\n    resetFieldsToDefault();\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import s from './ContactList.module.scss';\nimport { PropTypes } from 'prop-types';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  const contactItems = contacts.map(({ id, name, number }) => (\n    <li key={id} className={s.item}>\n      <div className={s.textContainer}>\n        <span>\n          {name}: {number}\n        </span>\n        <button id={id} className={s.button} type=\"button\" onClick={handleDelete}>\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul className={s.list}>{contactItems}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/change');\n","export const getFilter = state => state.filter;\n","import s from './Filter.module.scss';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filter-actions';\nimport { getFilter } from './../../redux/filter/filter-selector';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const getContactsRequest = createAction('contacts/get/request');\nexport const getContactsSuccess = createAction('contacts/get/success');\nexport const getContactsError = createAction('contacts/get/error');\n\nexport const addContactRequest = createAction('contacts/add/request');\nexport const addContactSuccess = createAction('contacts/add/success');\nexport const addContactError = createAction('contacts/add/error');\n\nexport const deleteContactRequest = createAction('contacts/delete/request');\nexport const deleteContactSuccess = createAction('contacts/delete/success');\nexport const deleteContactError = createAction('contacts/delete/error');\n","const API_CONST = {\n  BASE_URL: 'https://61c186a09dbcca0017c81f2a.mockapi.io/api/v1',\n  CONTACTS_ENDPOINT: 'contacts',\n};\n\nexport default API_CONST;\n","import API_CONST from './api-const';\nconst { BASE_URL, CONTACTS_ENDPOINT } = API_CONST;\n\nexport const getContacts = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/${CONTACTS_ENDPOINT}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const contacts = await response.json();\n    return contacts;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const addContact = async (name, number) => {\n  try {\n    const response = await fetch(`${BASE_URL}/${CONTACTS_ENDPOINT}`, {\n      method: 'POST',\n      body: JSON.stringify({ name, number }),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const newContact = await response.json();\n    return newContact;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const deleteContact = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/${CONTACTS_ENDPOINT}/${id}`, {\n      method: 'DELETE',\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const deletedContact = await response.json();\n    return deletedContact;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import * as API from '../../api/api-client';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nexport const getContacts = () => async dispatch => {\n  dispatch(getContactsRequest());\n  try {\n    const contacts = await API.getContacts();\n    dispatch(getContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(getContactsError());\n  }\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  dispatch(addContactRequest());\n  try {\n    await API.addContact(name, number);\n    dispatch(addContactSuccess());\n  } catch (error) {\n    dispatch(addContactError());\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await API.deleteContact(id);\n    dispatch(deleteContactSuccess());\n  } catch (error) {\n    dispatch(deleteContactError());\n  }\n};\n","import { getFilter } from '../filter/filter-selector';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getInvalidated = state => state.contacts.isInvalidated;\n\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) =>\n  contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())),\n);\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './App.module.scss';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { contactsSelectors, contactsOperations } from './../../redux/contacts';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const isInvalidated = useSelector(contactsSelectors.getInvalidated);\n\n  useEffect(() => {\n    if (isInvalidated) {\n      dispatch(contactsOperations.getContacts());\n    }\n  }, [isInvalidated, dispatch]);\n\n  const handleDeleteContact = event => {\n    const { id } = event.target;\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  const handleAddContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in the contacts`);\n      return;\n    }\n    dispatch(contactsOperations.addContact(name, number));\n  };\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ContactList contacts={filteredContacts} handleDelete={handleDeleteContact} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nconst items = createReducer(\n  [],\n  {\n    [getContactsSuccess]: (state, { payload }) => payload,\n  },\n  // [getContactsSuccess]: (_, { payload }) => payload,\n  // [deleteContactSuccess]: (state, { payload }) =>\n  //   state.filter(contact => contact.id !== payload.id),\n);\n\nconst isLoading = createReducer(true, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst isInvalidated = createReducer(true, {\n  [getContactsSuccess]: () => false,\n  [addContactSuccess]: () => true,\n  [deleteContactSuccess]: () => true,\n});\n\nexport const contacts = combineReducers({\n  items,\n  isLoading,\n  isInvalidated,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nexport const filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contacts } from '../contacts/contacts-reducer';\nimport { filter } from '../filter/filter-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts,\n    filter,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"label\":\"ContactForm_label__3KgVy\",\"button\":\"ContactForm_button__1007G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"textContainer\":\"ContactList_textContainer__EdsWp\",\"button\":\"ContactList_button__197mh\"};"],"sourceRoot":""}